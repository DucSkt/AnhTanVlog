{"ast":null,"code":"import _classCallCheck from \"/Users/ducskt/Projects/github/coreui-free-react-admin-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ducskt/Projects/github/coreui-free-react-admin-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ducskt/Projects/github/coreui-free-react-admin-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ducskt/Projects/github/coreui-free-react-admin-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ducskt/Projects/github/coreui-free-react-admin-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Messages from \"./Messages\";\n\nvar Charts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Charts, _Component);\n\n  function Charts() {\n    _classCallCheck(this, Charts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Charts).apply(this, arguments));\n  }\n\n  _createClass(Charts, [{\n    key: \"randomName\",\n    value: function randomName() {\n      var adjectives = [\"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\", \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\", \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\", \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\", \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\", \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\", \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\", \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\", \"ancient\", \"purple\", \"lively\", \"nameless\"];\n      var nouns = [\"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\", \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\", \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\", \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\", \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\", \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\", \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\", \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\", \"smoke\", \"star\"];\n      var adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n      var noun = nouns[Math.floor(Math.random() * nouns.length)];\n      return adjective + noun;\n    }\n  }, {\n    key: \"randomColor\",\n    value: function randomColor() {\n      return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Charts;\n}(Component);\n\nexport default Charts;","map":{"version":3,"sources":["/Users/ducskt/Projects/github/coreui-free-react-admin-template/src/views/Charts/Charts.js"],"names":["React","Component","Messages","Charts","adjectives","nouns","adjective","Math","floor","random","length","noun","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Messages from \"./Messages\";\n\nclass Charts extends Component {\n   randomName() {\n    const adjectives = [\"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\", \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\", \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\", \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\", \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\", \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\", \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\", \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\", \"ancient\", \"purple\", \"lively\", \"nameless\"];\n    const nouns = [\"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\", \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\", \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\", \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\", \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\", \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\", \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\", \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\", \"smoke\", \"star\"];\n    const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\n    return adjective + noun;\n  }\n\n   randomColor() {\n    return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n  }\n\n  render() {\n    return null\n}\n}\n\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}